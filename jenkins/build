pipeline {
    agent { label 'smart-insight' }

    environment {
        http_proxy  = 'http://webproxy.emarsys.at:3128'
        https_proxy = 'http://webproxy.emarsys.at:3128'
        gitlab_token = credentials('implementations-build-trigger')
    }

    triggers {
        gitlab(triggerOnPush: true, branchFilterType: 'NameBasedFilter', includeBranchesSpec: 'master', secretToken: env.gitlab_token)
    }

    stages {
        stage('Docker-compose up') {
            steps {
                sh 'docker-compose -f jenkins-docker-compose.yml up -d'
                sleep 30
            }
        }
        stage('Re-build implementations image') {
            steps {
                sh 'docker-compose -f jenkins-docker-compose.yml build cranium'
            }
        }
        stage('Run tests') {
            steps {
                sh 'docker-compose -f jenkins-docker-compose.yml run cranium sh -c rake'
            }
        }
    }

     post {
       failure {
           slackSend color: '#a30300', message: "Build failed: ${env.JOB_NAME}", channel: 'si-private', teamDomain: 'emarsys', tokenCredentialId: 'si-slack-token'
       }

       fixed {
           slackSend color: '#2eb886', message: "Build is back to normal: ${env.JOB_NAME}", channel: 'si-private', teamDomain: 'emarsys', tokenCredentialId: 'si-slack-token'
       }

       always {
           sh 'docker-compose -f jenkins-docker-compose.yml down'
       }
    }
}
